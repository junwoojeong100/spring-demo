trigger:
- master

resources:
- repo: self

variables:

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build job
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false
    - upload: $(system.defaultWorkingDirectory)
      artifact: drop    
- stage: Deploy
  displayName: Deploy stage
  jobs: 
  - deployment: VM Deploy
    displayName: Deploy job
    environment:
      name: test-deploy-to-vm
      resourceType: VirtualMachine
    strategy:
      runOnce:
        preDeploy:
          steps:
          - download: current
            artifact: drop
          - script: |
              echo initialize, cleanup, backup, install certs
        deploy:
          steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                # Modify deployment script based on the app type
                echo "Starting deployment script run"
                sudo killall java 
                sudo java -jar '$(Pipeline.Workspace)/drop/target/spring-demo-1.0.0.jar' &
