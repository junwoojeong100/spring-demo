# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Maven & Docker Build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    #- name: Update dependency graph
    #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

    #- name: Build the Docker image
    #  run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
    
    - name: ACR build and push
      id: build-push-acr
      uses: azure/acr-build@v1
      with:
        service_principal: ${{ secrets.service_principal }}
        service_principal_password: ${{ secrets.service_principal_password }}
        tenant: ${{ secrets.tenant }}
        registry: ${{ secrets.registry }}
        repository: ${{ secrets.repository }}
        #image:  azure-vote-front
        #folder: azure-vote
        #branch: master
        tag: ${{ github.sha }}
        
    - name: Azure login
      id: login
      uses: azure/login@v1.4.3
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: '${{ secrets.resource_group }}' 
        cluster-name: '${{ secrets.cluster_name }}'
    - name: Setup kubectl
      id: install-kubectl
      uses: azure/setup-kubectl@v3
    - name: Deploy to AKS
      id: deploy-aks
      uses: Azure/k8s-deploy@v4
      with:
        namespace: 'default'
        manifests: |
           manifests/deployment.yml
           manifests/service.yml 
        images: '${{ secrets.registry }}.azurecr.io/${{ secrets.repository }}:${{ github.sha }}'
        pull-images: false       
      
      
